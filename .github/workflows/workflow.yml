name: workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build_windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Get Conan
      uses: turtlebrowser/get-conan@main

    - name: Conan profile
      run: conan profile new default --detect

    - name: Conan profile update package manager mode
      run: conan profile update conf.tools.system.package_manager:mode=install default

    - name: Dependencies
      run: conan install ${{github.workspace}} -s build_type=Release --build missing --install-folder=${{github.workspace}}/build
      
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  build_ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
 
    - name: Get Conan
      run: pip3 install conan

    - name: Conan profile
      run: conan profile new default --detect

    - name: Conan profile update package manager mode
      run: conan profile update conf.tools.system.package_manager:mode=install default
    
    - name: remove conan system requirements
      run: conan remove --system-reqs "*"

    - name: Dependencies
      run: conan install ${{github.workspace}} -s build_type=Release --build missing --install-folder=${{github.workspace}}/build
      
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  build_mac:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Get Conan
      run: brew install conan

    - name: Conan profile
      run: conan profile new default --detect

    - name: Conan profile update package manager mode
      run: conan profile update conf.tools.system.package_manager:mode=install default

    - name: Conan profile set compiler to clang
      run: conan profile update settings.compiler=clang default

    - name: Dependencies
      run: conan install ${{github.workspace}} -s build_type=Release --build missing --install-folder=${{github.workspace}}/build
      
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
